from typing import Dict

_PROMPT_TEMPLATES: Dict[str, str] = {}

def register_template(name: str, template: str) -> None:
    if name in _PROMPT_TEMPLATES:
        raise ValueError(f"Template with name '{name}' is already registered.")
    _PROMPT_TEMPLATES[name] = template

def get_template(name: str) -> str:
    template = _PROMPT_TEMPLATES.get(name)
    if template is None:
        raise KeyError(f"Template with name '{name}' not found.")
    return template

LANG_RETRIEVER_V1_TEMPLATE_NAME = "lang_retriever_v1"

def initialize_templates() -> None:
    register_template(
        LANG_RETRIEVER_V1_TEMPLATE_NAME,
        """
            ### Роль: Лингвист.
            ### Задача:
            Идентифицируй **только те естественные языки**, которые являются **объектом исследования** в статье, на основе её заголовка. 

            Строго следуй алгоритму анализа.

            ### Алгоритм анализа:
            1. **Явные упоминания**:
            - Извлекай **прямые названия языков** (напр. "эрзянский" -> `myv`).
            - Для архаичных форм используй исторические коды (напр. "древнеанглийский" -> `ang`).  
            - Аргументируй для себя, почему тот или иной язык должен попасть в ответ.  
            - Упоминаний может и не быть, тогда ответ - пустой список.
            - Выведи строго ISO639-3 коды только тех языков, которые прямо или косвенно названы как объект исследования в заголовке
            - Не учитывай язык написания статьи, не включай языки по культурным или географическим ассоциациям без прямого указания
            - Если нет прямого указания на языковой анализ, то не включай язык в ответ.
            - Если приведена языковая группа, то надо выдать все коды языков этой группы, включая диалекты и подобное.

            2. **Неявные ссылки через контекст**:
            - **Языковые семьи/группы** -> все языки в группе (напр. "тюркские" -> 40+ кодов).
            - **Геоуказатели** -> языки региона (напр. "языки Океании" -> все коды океанийской семьи).
            - **Лингвистические конструкции** -> языки, участвующие в сравнении (напр. "сравнение аориста в балканских языках" -> соответствующие коды).

            3. **Жёсткие фильтры**:
            - Игнорируй язык написания статьи (даже если упомянут в заголовке).
            - Отсекай производные прилагательные без прямого указания на язык (напр. "германская рукопись" != `deu/gmh`).
            - Учитывай только прямые упоминания языков/языковых 

            ### Формат вывода:
            - Строго **только коды ISO-639-3** в массиве
            - Аргументируй для себя, почему тот или иной язык должен попасть в ответ.  
            
            ### Входные данные:
            Заголовок статьи: {title}
        """
    )
